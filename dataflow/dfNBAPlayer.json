{
	"name": "dfNBAPlayer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NBAPlayerList2019",
						"type": "DatasetReference"
					},
					"name": "NBAPlayerStats"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "GetBasketBallData"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tRk as short,\n\t\tPlayer as string,\n\t\tPos as string,\n\t\tAge as short,\n\t\tTm as string,\n\t\tG as short,\n\t\tGS as short,\n\t\tMP as double,\n\t\tFG as double,\n\t\tFGA as double,\n\t\t{FG%} as double,\n\t\t{3P} as double,\n\t\t{3PA} as double,\n\t\t{3P%} as double,\n\t\t{2P} as double,\n\t\t{2PA} as double,\n\t\t{2P%} as double,\n\t\t{eFG%} as double,\n\t\tFT as double,\n\t\tFTA as double,\n\t\t{FT%} as double,\n\t\tORB as double,\n\t\tDRB as double,\n\t\tTRB as double,\n\t\tAST as double,\n\t\tSTL as double,\n\t\tBLK as double,\n\t\tTOV as double,\n\t\tPF as double,\n\t\tPTS as integer '##0'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> NBAPlayerStats\nNBAPlayerStats derive(PlayerName = :name,\n\t\tdescribeAPlayer = \"{:name} is a {:playerRating} player\",\n\t\teach(match(type==\"double\"), $$ = round($$, 0)),\n\t\tYEAR = 2019,\n\t\tname := split(Player, '\\\\')[1],\n\t\tplayerRating := case(PTS < 10, 'bad', and(PTS < 20, PTS >= 10), 'good', PTS >= 20, 'great')) ~> GetBasketBallData\nGetBasketBallData select(mapColumn(\n\t\tRK = Rk,\n\t\tPOS = Pos,\n\t\tAge,\n\t\tTm,\n\t\tG,\n\t\tGS,\n\t\teach(match(origin == 'dcGetBasketBallData'),\n\t\t\tupper($$) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tRK as decimal(38,0),\n\t\tPLAYER as string,\n\t\tPOS as string,\n\t\tAGE as decimal(38,0),\n\t\tTM as string,\n\t\tG as decimal(38,0),\n\t\tGS as decimal(38,0),\n\t\tMP as double,\n\t\tFG as double,\n\t\tFGA as double,\n\t\tFGP as double,\n\t\tC3P as double,\n\t\tC3PA as double,\n\t\tC3PP as double,\n\t\tC2P as double,\n\t\tC2PA as double,\n\t\tC2PP as double,\n\t\tEFG as double,\n\t\tFT as double,\n\t\tFTA as double,\n\t\tFTP as double,\n\t\tORB as double,\n\t\tDRB as double,\n\t\tTRB as double,\n\t\tYEAR as decimal(38,0),\n\t\tPLAYERNAME as string,\n\t\tDESCRIBEAPLAYER as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tRK = Rk,\n\t\tPOS,\n\t\tAGE = Age,\n\t\tTM = Tm,\n\t\tG,\n\t\tGS,\n\t\tMP,\n\t\tFG,\n\t\tFGA,\n\t\tFGP = {FG%},\n\t\tC3P = {3P},\n\t\tC3PA = {3PA},\n\t\tC3PP = {3P%},\n\t\tC2P = {2P},\n\t\tC2PA = {2PA},\n\t\tC2PP = {2P%},\n\t\tEFG = {EFG%},\n\t\tFT,\n\t\tFTA,\n\t\tFTP = {FT%},\n\t\tORB,\n\t\tDRB,\n\t\tTRB,\n\t\tYEAR,\n\t\tPLAYERNAME,\n\t\tDESCRIBEAPLAYER\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}